#---- 2.1 Load devtools and friends ----
library(devtools)
install.packages("digest")
install.packages("digest")
#---- 2.1 Load devtools and friends ----
library(devtools)
library(tidyverse)
library(fs)
library(testthat)
#---- 2.4 create_package() ----
# 自己定义的目录,最好不要和已有R项目放到一起...
setwd("C:/Users/Xin/Desktop")
create_package("./foofactors")
#---- 2.5 use_git() ----
setwd("./foofactors")
#---- 2.6 Write the first function ----
(a <- factor(c("character", "hits", "your", "eyeballs")))
(b <- factor(c("but", "integer", "where it", "counts")))
c(a, b)
factor(c(as.character(a), as.character(b)))
fbind <- function(a, b) {
factor(c(as.character(a), as.character(b)))
}
rm(fbind)
#---- 2.7 use_r() ----
use_r("fbind")
#---- 2.8 load_all() ----
load_all()
fbind(a, b)
exists("fbind", where = ".GlobalEnv", inherits = FALSE)
# 在shell中执行的R CMD检查是检查R包是否处于完全工作状态的黄金标准
# check()可以实现
check()
#---- 2.11 use_mit_license() ----
use_mit_license("Xin Yuan")
document()
?fbind
#---- 2.13 check() again ----
check()
#---- 2.14 install() ----
install()
# 测试是否安装成功
library(foofactors)
a <- factor(c("character", "hits", "your", "eyeballs"))
b <- factor(c("but", "integer", "where it", "counts"))
fbind(a, b)
use_testthat() # 创建test/仅仅是初始化test
use_test("fbind")
load_all()
test()
use_package("forcats")
# 构建第二个函数:因子频率表
use_r("fcount")
"
#' Make a sorted frequency table for a factor
#'
#' @param x factor
#'
#' @return A tibble
#' @export
#' @examples
#' fcount(iris$Species)
fcount <- function(x) {
forcats::fct_count(x, sort = TRUE)
}
"
load_all()
fcount(iris$Species)
# Generate the associated help file via document().
document()
?fcount
#---- 2.18 use_readme_rmd() ----
use_readme_rmd()
check()
install()
